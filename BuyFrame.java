/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package AfterSQLfix.BookStore_Final;

import java.awt.Color;
import javax.swing.JOptionPane;
import java.sql.*;
import java.time.*;
import java.time.format.DateTimeFormatter;
import javax.swing.JFrame;
/**
 *
 * @author Manimozhi Ramalingam
 */
public class BuyFrame extends javax.swing.JFrame {

    /**
     * Creates new form buyFrame
     */
    public BuyFrame() {
        initComponents();
        getContentPane().setBackground(new Color(0,170,228));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nameLab = new javax.swing.JLabel();
        mobileLab = new javax.swing.JLabel();
        nameTxtf = new javax.swing.JTextField();
        mobileTxtf = new javax.swing.JTextField();
        submitBut = new javax.swing.JButton();
        clearBut = new javax.swing.JButton();
        addressLab = new javax.swing.JLabel();
        cityLab = new javax.swing.JLabel();
        pinLab = new javax.swing.JLabel();
        addressTxtf = new javax.swing.JTextField();
        cityTxtf = new javax.swing.JTextField();
        pinTxtf = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Customer Details");
        setBackground(new java.awt.Color(102, 204, 255));

        nameLab.setBackground(new java.awt.Color(0, 170, 228));
        nameLab.setFont(new java.awt.Font("Trebuchet MS", 0, 20)); // NOI18N
        nameLab.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        nameLab.setText("Name ");
        nameLab.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        nameLab.setOpaque(true);

        mobileLab.setBackground(new java.awt.Color(0, 170, 228));
        mobileLab.setFont(new java.awt.Font("Trebuchet MS", 0, 20)); // NOI18N
        mobileLab.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        mobileLab.setText("Mobile Number ");
        mobileLab.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        mobileLab.setOpaque(true);

        nameTxtf.setFont(new java.awt.Font("Palatino Linotype", 0, 20)); // NOI18N
        nameTxtf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameTxtfActionPerformed(evt);
            }
        });

        mobileTxtf.setFont(new java.awt.Font("Palatino Linotype", 0, 20)); // NOI18N

        submitBut.setFont(new java.awt.Font("Palatino Linotype", 1, 20)); // NOI18N
        submitBut.setText("Submit");
        submitBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButActionPerformed(evt);
            }
        });

        clearBut.setFont(new java.awt.Font("Palatino Linotype", 1, 20)); // NOI18N
        clearBut.setText("Clear");
        clearBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButActionPerformed(evt);
            }
        });

        addressLab.setBackground(new java.awt.Color(0, 170, 228));
        addressLab.setFont(new java.awt.Font("Trebuchet MS", 0, 20)); // NOI18N
        addressLab.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        addressLab.setText("Address");
        addressLab.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        addressLab.setOpaque(true);

        cityLab.setBackground(new java.awt.Color(0, 170, 228));
        cityLab.setFont(new java.awt.Font("Trebuchet MS", 0, 20)); // NOI18N
        cityLab.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        cityLab.setText("City, State");
        cityLab.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        cityLab.setOpaque(true);

        pinLab.setBackground(new java.awt.Color(0, 170, 228));
        pinLab.setFont(new java.awt.Font("Trebuchet MS", 0, 20)); // NOI18N
        pinLab.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        pinLab.setText("Pincode");
        pinLab.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        pinLab.setOpaque(true);

        addressTxtf.setFont(new java.awt.Font("Palatino Linotype", 0, 20)); // NOI18N
        addressTxtf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addressTxtfActionPerformed(evt);
            }
        });

        cityTxtf.setFont(new java.awt.Font("Palatino Linotype", 0, 20)); // NOI18N

        pinTxtf.setFont(new java.awt.Font("Palatino Linotype", 0, 20)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(145, 145, 145)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(mobileLab, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameLab, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(submitBut, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addressLab, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cityLab, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pinLab, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(nameTxtf)
                    .addComponent(mobileTxtf, javax.swing.GroupLayout.DEFAULT_SIZE, 355, Short.MAX_VALUE)
                    .addComponent(addressTxtf)
                    .addComponent(clearBut, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cityTxtf)
                    .addComponent(pinTxtf))
                .addContainerGap(144, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(nameTxtf, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)
                    .addComponent(nameLab, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addressLab, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addressTxtf, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cityTxtf)
                    .addComponent(cityLab, javax.swing.GroupLayout.DEFAULT_SIZE, 64, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pinLab, javax.swing.GroupLayout.DEFAULT_SIZE, 64, Short.MAX_VALUE)
                    .addComponent(pinTxtf))
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(mobileLab, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mobileTxtf, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(submitBut, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clearBut, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(38, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void clearButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButActionPerformed
        // TODO add your handling code here:
        nameTxtf.setText("");
        mobileTxtf.setText("");
        addressTxtf.setText("");
        pinTxtf.setText("");
        cityTxtf.setText("");
    }//GEN-LAST:event_clearButActionPerformed

    private void submitButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButActionPerformed
        // TODO add your handling code here:
        String custName = nameTxtf.getText();
        String custMobile = mobileTxtf.getText();
        String address = addressTxtf.getText();
        String city = cityTxtf.getText();
        String pin = pinTxtf.getText();
        if(custName.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please enter a valid name", "Invalid Name", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if(custMobile.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please enter a valid mobile number", "Invalid Mobile Number", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if(!custMobile.matches("(0/91)?[7-9][0-9]{9}")) {
            JOptionPane.showMessageDialog(null, "Please enter a valid mobile number", "Invalid Mobile Number", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if(!pin.matches("^[1-9]{1}[0-9]{2}\\s{0,1}[0-9]{3}$")) {
            JOptionPane.showMessageDialog(null, "Please enter a valid pincode", "Invalid Pin Code", JOptionPane.ERROR_MESSAGE);
            return;
        }
        this.dispose();
        JOptionPane.showMessageDialog(null, "Successfully submitted");
        try {
            Class.forName("org.apache.derby.jdbc.ClientDriver");
            Connection con = DriverManager.getConnection("jdbc:derby://localhost:1527/MiniProject_BookStore","gova","gova");
            PreparedStatement ps = con.prepareStatement("select * from gova.cart",ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
            ResultSet rset = ps.executeQuery();      
            
            DateTimeFormatter dtf = DateTimeFormatter.ofPattern("dd");  
            DateTimeFormatter dtf2 = DateTimeFormatter.ofPattern("HH:mm");
            DateTimeFormatter dtf3 = DateTimeFormatter.ofPattern("HH:mm:ss");
            DateTimeFormatter dtf4 = DateTimeFormatter.ofPattern("yyyy/MM/dd");
            LocalDateTime now = LocalDateTime.now();  
            System.out.println("Hours:Minutes = "+dtf2.format(now));
            //System.out.println(dtf.format(now));  
            String dateStr = dtf.format(now);
            String timeStr = dtf2.format(now);
            String date = dtf4.format(now);
            String time = dtf3.format(now);
            String dateTime = date +" "+ time;
//            String orderID = date+custName.substring(0,3).toUpperCase()+custMobile.substring(0, 4);
//            System.out.println("OrderID : "+orderID);
            long custMobileLong = Long.parseLong(custMobile);
            int pinInt = Integer.parseInt(pin);
            String orderID2 = custName.substring(0, 4).toUpperCase()+custMobile.substring(0, 4)+dateStr+timeStr.substring(0, 2)+timeStr.substring(3);
            PreparedStatement stNew = con.prepareStatement("CREATE TABLE "+orderID2+" (ISBN BIGINT not NULL, Title VARCHAR(100), Price double, PRIMARY KEY (ISBN))");
            stNew.executeUpdate();
            
            PreparedStatement ps2 = con.prepareStatement("select * from gova.allbooks where isbn=?",ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);     
            
            PreparedStatement ps3 = con.prepareStatement("INSERT INTO gova."+orderID2+" VALUES(?,?,?)",ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
            double total = 0.0; 
            while(rset.next()) {
                long isbn = rset.getLong(1);
                
                ps2.setLong(1, isbn);
                ResultSet rset2 = ps2.executeQuery(); //ResultSet of individual book
                rset2.next(); //Gets to first and only row
                
                ps3.setLong(1, isbn);
                ps3.setString(2, rset2.getString(2));
                ps3.setDouble(3, rset2.getDouble(4));
                ps3.executeUpdate();
                total = total+ rset2.getDouble(4);
            }
            PreparedStatement psAllOrders = con.prepareStatement("INSERT INTO gova.orderslist VALUES(?,?,?,?,?,?,?,?)",ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
            psAllOrders.setString(1, orderID2);
            psAllOrders.setString(2, custName);
            psAllOrders.setString(3, address);
            psAllOrders.setString(4, city);
            psAllOrders.setInt(5, pinInt);
            psAllOrders.setLong(6, custMobileLong);
            psAllOrders.setDouble(7, total);
            psAllOrders.setString(8, dateTime);
            psAllOrders.executeUpdate();
            PreparedStatement ps4 = con.prepareStatement("SELECT * FROM GOVA."+orderID2+"",ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
            ResultSet rsetBill = ps4.executeQuery();
            ShowBill show1 = new ShowBill(rsetBill, orderID2);
            show1.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
            show1.setVisible(true);
            
        } catch(ClassNotFoundException ex) {
            System.out.println("ClassNotFound in BuyFrame : ");
            ex.printStackTrace();
        } catch(SQLException ex2) {
            System.out.println("SQLException in BuyFrame : "+ex2);
        }
    }//GEN-LAST:event_submitButActionPerformed

    private void nameTxtfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameTxtfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameTxtfActionPerformed

    private void addressTxtfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addressTxtfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addressTxtfActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BuyFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BuyFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BuyFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BuyFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BuyFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel addressLab;
    private javax.swing.JTextField addressTxtf;
    private javax.swing.JLabel cityLab;
    private javax.swing.JTextField cityTxtf;
    private javax.swing.JButton clearBut;
    private javax.swing.JLabel mobileLab;
    private javax.swing.JTextField mobileTxtf;
    private javax.swing.JLabel nameLab;
    private javax.swing.JTextField nameTxtf;
    private javax.swing.JLabel pinLab;
    private javax.swing.JTextField pinTxtf;
    private javax.swing.JButton submitBut;
    // End of variables declaration//GEN-END:variables
}
